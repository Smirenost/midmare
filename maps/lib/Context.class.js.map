{"version":3,"sources":["lib/Context.class.js","../lib/Context.class.ts"],"names":["Context","Object","defineProperty","exports","value","Context_1","[object Object]","options","this","matched","__pathStory","Set","path","app","key","val","Map","__store","newStore","err","bool","Boolean","error","data","send"],"mappings":"AAAA,aCKA,IAAiBA,QDJjBC,OAAOC,eAAeC,QAAS,aAAc,CAAEC,OAAO,IACtDD,QAAQH,aAAU,ECGlB,SAAiBK,GAIAA,EAAAL,QAAb,MAcIM,YAA+BC,GAAAC,KAAAD,QAAAA,EAXxBC,KAAAC,QAAyB,GAQzBD,KAAAE,YAA2B,IAAIC,IAIlCH,KAAKI,KAAOJ,KAAKD,QAAQK,KACzBJ,KAAKK,IAAML,KAAKD,QAAQM,IAGrBP,IAAIQ,EAAaC,GAEpB,OADAP,KAAKM,GAAOC,EACLA,EAGJT,IAAIQ,GACP,OAAON,KAAKM,GAGTR,QACH,OAAO,IAAIU,IAAIR,KAAKS,SAGjBX,QAAQY,GACX,OAAOV,KAAKS,QAAUC,EAGnBZ,MAAMa,GACT,MAAMA,EAGHb,OAAOc,EAAeD,GACpBE,QAAQD,IACTZ,KAAKc,MAAMH,GAIZb,KAAKM,EAAmBW,GAC3Bf,KAAKD,QAAQM,IAAIW,KAAKZ,EAAMW,EAAMf,QAnD9C,CAAiBR,QAAAG,QAAAH,UAAAG,QAAAH,QAAO","file":"../../lib/Context.class.js","sourcesContent":["\"use strict\";var Context;Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.Context=void 0,function(t){t.Context=class{constructor(t){this.options=t,this.matched=[],this.__pathStory=new Set,this.path=this.options.path,this.app=this.options.app}set(t,e){return this[t]=e,e}get(t){return this[t]}store(){return new Map(this.__store)}restore(t){return this.__store=t}error(t){throw t}assert(t,e){Boolean(t)||this.error(e)}send(t,e){this.options.app.send(t,e,this)}}}(Context=exports.Context||(exports.Context={}));\n//# sourceMappingURL=../maps/lib/Context.class.js.map\n","import {Application} from \"./Application.class\";\nimport {Middleware} from \"./Middleware.class\";\nimport { Router } from \"./Router.class\";\nimport { Route } from \"./Route.class\";\n\nexport namespace Context {\n    import NextCallback = Middleware.NextCallback;\n    import Dict = NodeJS.Dict;\n\n    export class Context implements IContext {\n        public params: Dict<string>;\n        public captures: string;\n        public matched: Route.Route[] = [];\n        public routerPath: string;\n        public path: string;\n        public router: Router.Router;\n        public routerName: string;\n        public _matchedRoute: string;\n        public _matchedRouteName: string;\n        public app: Application.Application;\n        public __pathStory: Set<string> = new Set;\n        [key: string]: any;\n\n        constructor(protected readonly options: IOptions) {\n            this.path = this.options.path;\n            this.app = this.options.app;\n        }\n\n        public set(key: string, val: any): any {\n            this[key] = val;\n            return val;\n        }\n\n        public get(key: string): any {\n            return this[key];\n        }\n\n        public store() {\n            return new Map(this.__store);\n        }\n\n        public restore(newStore: Map<string, any>) {\n            return this.__store = newStore;\n        }\n\n        public error(err: Error) {\n            throw err;\n        }\n\n        public assert(bool: boolean, err: Error) {\n            if (!Boolean(bool)) {\n                this.error(err);\n            }\n        }\n\n        public send(path: Router.Path, data: any) {\n            this.options.app.send(path, data, this);\n        }\n    }\n\n    export interface IContext {\n        next?: NextCallback;\n        [key: string]: any;\n    }\n\n    export interface IOptions {\n        app: Application.Application;\n        [key: string]: any;\n    }\n}"]}